<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ImproperlyConfigured
          at /swagger/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ImproperlyConfigured
       at /swagger/</h1>
  <pre class="exception_value">Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://127.0.0.1:8000/swagger/?format=openapi</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.16</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ImproperlyConfigured</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py</span>, line 1367, in build_unknown_field</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>drf_yasg.views.SchemaView</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/nathalie/coding/nathabee-cloud/competence_project/venv/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.11.4</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/nathalie/coding/nathabee-cloud/competence_project&#x27;,
 &#x27;/home/nathalie/anaconda3/lib/python311.zip&#x27;,
 &#x27;/home/nathalie/anaconda3/lib/python3.11&#x27;,
 &#x27;/home/nathalie/anaconda3/lib/python3.11/lib-dynload&#x27;,
 &#x27;/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Wed, 18 Sep 2024 17:58:03 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c134976025801536">
              
                <ol start="48" class="pre-context" id="pre134976025801536">
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post134976025801536">
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre134976025801536', 'post134976025801536')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ac291f39cd0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c134976025801472">
              
                <ol start="190" class="pre-context" id="pre134976025801472">
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post134976025801472">
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801472', 'post134976025801472')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801472">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ac28e4b1a80&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7ac291f39cd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ac28e4b1a80&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c134976025801408">
              
                <ol start="49" class="pre-context" id="pre134976025801408">
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>        return view_func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post134976025801408">
                  
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre134976025801408', 'post134976025801408')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: GET &#x27;/swagger/?format=openapi&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x7ac28e4b1940&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c134976027612160">
              
                <ol start="97" class="pre-context" id="pre134976027612160">
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post134976027612160">
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre134976027612160', 'post134976027612160')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976027612160">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;renderer_classes&#x27;: (&lt;class &#x27;drf_yasg.renderers.SwaggerUIRenderer&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.renderers.ReDocRenderer&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.renderers.SwaggerYAMLRenderer&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.renderers.SwaggerJSONRenderer&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.renderers.OpenAPIRenderer&#x27;&gt;)}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c134976025801344">
              
                <ol start="502" class="pre-context" id="pre134976025801344">
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post134976025801344">
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976025801344', 'post134976025801344')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801344">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method get_schema_view.&lt;locals&gt;.SchemaView.get of &lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c134976027552000">
              
                <ol start="462" class="pre-context" id="pre134976027552000">
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post134976027552000">
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre134976027552000', 'post134976027552000')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976027552000">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;,
 &#x27;view&#x27;: &lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function exception_handler at 0x7ac28e64ab60&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c134976027551936">
              
                <ol start="473" class="pre-context" id="pre134976027551936">
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post134976027551936">
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976027551936', 'post134976027551936')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976027551936">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ImproperlyConfigured(&#x27;Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;openapi&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c134976025801280">
              
                <ol start="499" class="pre-context" id="pre134976025801280">
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post134976025801280">
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre134976025801280', 'post134976025801280')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method get_schema_view.&lt;locals&gt;.SchemaView.get of &lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/views.py</code>, line 96, in get
          

          
            <div class="context" id="c134976025801216">
              
                <ol start="89" class="pre-context" id="pre134976025801216">
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>        def get(self, request, version=&#x27;&#x27;, format=None):</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            version = request.version or version or &#x27;&#x27;</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            if isinstance(request.accepted_renderer, _SpecRenderer):</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>                generator = self.generator_class(info, version, url, patterns, urlconf)</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>                generator = self.generator_class(info, version, url, patterns=[])</pre></li>
                
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre></pre></li>
                
                </ol>
              
              <ol start="96" class="context-line">
                <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            schema = generator.get_schema(request, self.public)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='97' class="post-context" id="post134976025801216">
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            if schema is None:</pre></li>
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>                raise exceptions.PermissionDenied()  # pragma: no cover</pre></li>
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>            return Response(schema)</pre></li>
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>        @classmethod</pre></li>
                  
                  <li onclick="toggle('pre134976025801216', 'post134976025801216')"><pre>        def apply_cache(cls, view, cache_timeout, cache_kwargs):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801216">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>format</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>generator</td>
                    <td class="code"><pre>&lt;drf_yasg.generators.OpenAPISchemaGenerator object at 0x7ac28e4ef090&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>Info([(&#x27;title&#x27;, &#x27;Competence at school API&#x27;),
      (&#x27;description&#x27;, &#x27;REST API to test competence at school&#x27;),
      (&#x27;termsOfService&#x27;, &#x27;/static/html/tos/tos_rest_api.html&#x27;),
      (&#x27;contact&#x27;, Contact([(&#x27;email&#x27;, &#x27;nathabe123@gmail.com&#x27;)])),
      (&#x27;license&#x27;,
       License([(&#x27;name&#x27;, &#x27;BSD License&#x27;),
                (&#x27;url&#x27;,
                 &#x27;https://github.com/nathabee/competence_project/blob/main/LICENSE&#x27;)]))])</pre></td>
                  </tr>
                
                  <tr>
                    <td>patterns</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.views.get_schema_view.&lt;locals&gt;.SchemaView object at 0x7ac28e2de310&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>url</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>version</td>
                    <td class="code"><pre>&#x27;&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py</code>, line 276, in get_schema
          

          
            <div class="context" id="c134976025801152">
              
                <ol start="269" class="pre-context" id="pre134976025801152">
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        :return: the generated Swagger specification</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        :rtype: openapi.Swagger</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        endpoints = self.get_endpoints(request)</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        components = self.reference_resolver_class(openapi.SCHEMA_DEFINITIONS, force_init=True)</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        self.consumes = get_consumes(api_settings.DEFAULT_PARSER_CLASSES)</pre></li>
                
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        self.produces = get_produces(api_settings.DEFAULT_RENDERER_CLASSES)</pre></li>
                
                </ol>
              
              <ol start="276" class="context-line">
                <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        paths, prefix = self.get_paths(endpoints, components, request, public)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='277' class="post-context" id="post134976025801152">
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        security_definitions = self.get_security_definitions()</pre></li>
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        if security_definitions:</pre></li>
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>            security_requirements = self.get_security_requirements(security_definitions)</pre></li>
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre134976025801152', 'post134976025801152')"><pre>            security_requirements = None</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801152">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>components</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e2de390&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>endpoints</td>
                    <td class="code"><pre>{&#x27;/api/annees/&#x27;: (&lt;class &#x27;competence.views.AnneeViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.AnneeViewSet object at 0x7ac28e2eb650&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.AnneeViewSet object at 0x7ac28e2e7090&gt;)]),
 &#x27;/api/annees/{id}/&#x27;: (&lt;class &#x27;competence.views.AnneeViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e2e5c50&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e2e7dd0&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e104a50&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e105650&gt;)]),
 &#x27;/api/catalogues/&#x27;: (&lt;class &#x27;competence.views.CatalogueViewSet&#x27;&gt;,
                      [(&#x27;GET&#x27;,
                        &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e64d0&gt;),
                       (&#x27;POST&#x27;,
                        &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e73d0&gt;)]),
 &#x27;/api/catalogues/{id}/&#x27;: (&lt;class &#x27;competence.views.CatalogueViewSet&#x27;&gt;,
                           [(&#x27;GET&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e6550&gt;),
                            (&#x27;PUT&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e104350&gt;),
                            (&#x27;PATCH&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e104f50&gt;),
                            (&#x27;DELETE&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e105b50&gt;)]),
 &#x27;/api/eleves/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.EleveViewSet object at 0x7ac28e2e6290&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.EleveViewSet object at 0x7ac28e2e7310&gt;)]),
 &#x27;/api/eleves/custom_list/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                              [(&#x27;GET&#x27;,
                                &lt;competence.views.EleveViewSet object at 0x7ac28e2e6350&gt;)]),
 &#x27;/api/eleves/{id}/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e2e6410&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e104210&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e104e50&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e105a50&gt;)]),
 &#x27;/api/etapes/&#x27;: (&lt;class &#x27;competence.views.EtapeViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.EtapeViewSet object at 0x7ac28e2e5810&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.EtapeViewSet object at 0x7ac28e2e7010&gt;)]),
 &#x27;/api/etapes/{id}/&#x27;: (&lt;class &#x27;competence.views.EtapeViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e2e53d0&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e2e7c50&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e104950&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e105550&gt;)]),
 &#x27;/api/groupages/&#x27;: (&lt;class &#x27;competence.views.GroupageDataViewSet&#x27;&gt;,
                     [(&#x27;GET&#x27;,
                       &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2eb790&gt;),
                      (&#x27;POST&#x27;,
                       &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2e7490&gt;)]),
 &#x27;/api/groupages/{id}/&#x27;: (&lt;class &#x27;competence.views.GroupageDataViewSet&#x27;&gt;,
                          [(&#x27;GET&#x27;,
                            &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2e67d0&gt;),
                           (&#x27;PUT&#x27;,
                     â€¦ &lt;trimmed 11136 bytes string&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>public</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.generators.OpenAPISchemaGenerator object at 0x7ac28e4ef090&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py</code>, line 482, in get_paths
          

          
            <div class="context" id="c134976025801088">
              
                <ol start="475" class="pre-context" id="pre134976025801088">
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>        paths = OrderedDict()</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>        for path, (view_cls, methods) in sorted(endpoints.items()):</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>            operations = {}</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>            for method, view in methods:</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                if not self.should_include_endpoint(path, method, view, public):</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                    continue</pre></li>
                
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre></pre></li>
                
                </ol>
              
              <ol start="482" class="context-line">
                <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                operation = self.get_operation(view, path, prefix, method, components, request)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='483' class="post-context" id="post134976025801088">
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                if operation is not None:</pre></li>
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                    operations[method.lower()] = operation</pre></li>
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>            if operations:</pre></li>
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                # since the common prefix is used as the API basePath, it must be stripped</pre></li>
                  
                  <li onclick="toggle('pre134976025801088', 'post134976025801088')"><pre>                # from individual paths when writing them into the swagger document</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801088">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>components</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e2de390&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>endpoints</td>
                    <td class="code"><pre>{&#x27;/api/annees/&#x27;: (&lt;class &#x27;competence.views.AnneeViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.AnneeViewSet object at 0x7ac28e2eb650&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.AnneeViewSet object at 0x7ac28e2e7090&gt;)]),
 &#x27;/api/annees/{id}/&#x27;: (&lt;class &#x27;competence.views.AnneeViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e2e5c50&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e2e7dd0&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e104a50&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.AnneeViewSet object at 0x7ac28e105650&gt;)]),
 &#x27;/api/catalogues/&#x27;: (&lt;class &#x27;competence.views.CatalogueViewSet&#x27;&gt;,
                      [(&#x27;GET&#x27;,
                        &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e64d0&gt;),
                       (&#x27;POST&#x27;,
                        &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e73d0&gt;)]),
 &#x27;/api/catalogues/{id}/&#x27;: (&lt;class &#x27;competence.views.CatalogueViewSet&#x27;&gt;,
                           [(&#x27;GET&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e2e6550&gt;),
                            (&#x27;PUT&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e104350&gt;),
                            (&#x27;PATCH&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e104f50&gt;),
                            (&#x27;DELETE&#x27;,
                             &lt;competence.views.CatalogueViewSet object at 0x7ac28e105b50&gt;)]),
 &#x27;/api/eleves/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.EleveViewSet object at 0x7ac28e2e6290&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.EleveViewSet object at 0x7ac28e2e7310&gt;)]),
 &#x27;/api/eleves/custom_list/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                              [(&#x27;GET&#x27;,
                                &lt;competence.views.EleveViewSet object at 0x7ac28e2e6350&gt;)]),
 &#x27;/api/eleves/{id}/&#x27;: (&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e2e6410&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e104210&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e104e50&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.EleveViewSet object at 0x7ac28e105a50&gt;)]),
 &#x27;/api/etapes/&#x27;: (&lt;class &#x27;competence.views.EtapeViewSet&#x27;&gt;,
                  [(&#x27;GET&#x27;,
                    &lt;competence.views.EtapeViewSet object at 0x7ac28e2e5810&gt;),
                   (&#x27;POST&#x27;,
                    &lt;competence.views.EtapeViewSet object at 0x7ac28e2e7010&gt;)]),
 &#x27;/api/etapes/{id}/&#x27;: (&lt;class &#x27;competence.views.EtapeViewSet&#x27;&gt;,
                       [(&#x27;GET&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e2e53d0&gt;),
                        (&#x27;PUT&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e2e7c50&gt;),
                        (&#x27;PATCH&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e104950&gt;),
                        (&#x27;DELETE&#x27;,
                         &lt;competence.views.EtapeViewSet object at 0x7ac28e105550&gt;)]),
 &#x27;/api/groupages/&#x27;: (&lt;class &#x27;competence.views.GroupageDataViewSet&#x27;&gt;,
                     [(&#x27;GET&#x27;,
                       &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2eb790&gt;),
                      (&#x27;POST&#x27;,
                       &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2e7490&gt;)]),
 &#x27;/api/groupages/{id}/&#x27;: (&lt;class &#x27;competence.views.GroupageDataViewSet&#x27;&gt;,
                          [(&#x27;GET&#x27;,
                            &lt;competence.views.GroupageDataViewSet object at 0x7ac28e2e67d0&gt;),
                           (&#x27;PUT&#x27;,
                     â€¦ &lt;trimmed 11136 bytes string&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;GET&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>methods</td>
                    <td class="code"><pre>[(&#x27;GET&#x27;, &lt;competence.views.EleveViewSet object at 0x7ac28e2e6290&gt;),
 (&#x27;POST&#x27;, &lt;competence.views.EleveViewSet object at 0x7ac28e2e7310&gt;)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>operation</td>
                    <td class="code"><pre>Operation([(&#x27;operationId&#x27;, &#x27;catalogues_delete&#x27;),
           (&#x27;description&#x27;, &#x27;&#x27;),
           (&#x27;parameters&#x27;, []),
           (&#x27;responses&#x27;, Responses([(&#x27;204&#x27;, Response([(&#x27;description&#x27;, &#x27;&#x27;)]))])),
           (&#x27;tags&#x27;, [&#x27;catalogues&#x27;])])</pre></td>
                  </tr>
                
                  <tr>
                    <td>operations</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><pre>&#x27;/api/eleves/&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>path_suffix</td>
                    <td class="code"><pre>&#x27;/catalogues/{id}/&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>paths</td>
                    <td class="code"><pre>OrderedDict([(&#x27;/annees/&#x27;,
              PathItem([(&#x27;get&#x27;,
                         Operation([(&#x27;operationId&#x27;, &#x27;annees_list&#x27;),
                                    (&#x27;description&#x27;, &#x27;&#x27;),
                                    (&#x27;parameters&#x27;, []),
                                    (&#x27;responses&#x27;,
                                     Responses([(&#x27;200&#x27;,
                                                 Response([(&#x27;description&#x27;, &#x27;&#x27;),
                                                           (&#x27;schema&#x27;,
                                                            Schema([(&#x27;type&#x27;,
                                                                     &#x27;array&#x27;),
                                                                    (&#x27;items&#x27;,
                                                                     SchemaRef([(&#x27;$ref&#x27;,
                                                                                 &#x27;#/definitions/Annee&#x27;)]))]))]))])),
                                    (&#x27;tags&#x27;, [&#x27;annees&#x27;])])),
                        (&#x27;post&#x27;,
                         Operation([(&#x27;operationId&#x27;, &#x27;annees_create&#x27;),
                                    (&#x27;description&#x27;, &#x27;&#x27;),
                                    (&#x27;parameters&#x27;,
                                     [Parameter([(&#x27;name&#x27;, &#x27;data&#x27;),
                                                 (&#x27;in&#x27;, &#x27;body&#x27;),
                                                 (&#x27;required&#x27;, True),
                                                 (&#x27;schema&#x27;,
                                                  SchemaRef([(&#x27;$ref&#x27;,
                                                              &#x27;#/definitions/Annee&#x27;)]))])]),
                                    (&#x27;responses&#x27;,
                                     Responses([(&#x27;201&#x27;,
                                                 Response([(&#x27;description&#x27;, &#x27;&#x27;),
                                                           (&#x27;schema&#x27;,
                                                            SchemaRef([(&#x27;$ref&#x27;,
                                                                        &#x27;#/definitions/Annee&#x27;)]))]))])),
                                    (&#x27;tags&#x27;, [&#x27;annees&#x27;])])),
                        (&#x27;parameters&#x27;, [])])),
             (&#x27;/annees/{id}/&#x27;,
              PathItem([(&#x27;get&#x27;,
                         Operation([(&#x27;operationId&#x27;, &#x27;annees_read&#x27;),
                                    (&#x27;description&#x27;, &#x27;&#x27;),
                                    (&#x27;parameters&#x27;, []),
                                    (&#x27;responses&#x27;,
                                     Responses([(&#x27;200&#x27;,
                                                 Response([(&#x27;description&#x27;, &#x27;&#x27;),
                                                           (&#x27;schema&#x27;,
                                                            SchemaRef([(&#x27;$ref&#x27;,
                                                                        &#x27;#/definitions/Annee&#x27;)]))]))])),
                                    (&#x27;tags&#x27;, [&#x27;annees&#x27;])])),
                        (&#x27;put&#x27;,
                         Operation([(&#x27;operationId&#x27;, &#x27;annees_update&#x27;),
                                    (&#x27;description&#x27;, &#x27;&#x27;),
                                    (&#x27;parameters&#x27;,
                                     [Parameter([(&#x27;name&#x27;, &#x27;data&#x27;),
                                                 (&#x27;in&#x27;, &#x27;body&#x27;),
                                                 (&#x27;required&#x27;, True),
                                                 (&#x27;schema&#x27;,
                                                  SchemaRef([(&#x27;$ref&#x27;,
                                                              &#x27;#/definitions/Annee&#x27;)]))])]),
                                    (&#x27;responses&#x27;,
                                     Responses([(&#x27;200&#x27;,
                                                 Response([(&#x27;description&#x27;, &#x27;&#x27;),
                                                           (&#x27;schema&#x27;,
                                                            SchemaRef([(&#x27;$ref&#x27;,
                                                                        &#x27;#/definitions/Annee&#x27;)]))]))])),
                                    (&#x27;tags&#x27;, [&#x27;annees&#x27;])])),
                        (&#x27;patch&#x27;,
â€¦ &lt;trimmed 12507 bytes string&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prefix</td>
                    <td class="code"><pre>&#x27;/api&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>public</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.generators.OpenAPISchemaGenerator object at 0x7ac28e4ef090&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view</td>
                    <td class="code"><pre>&lt;competence.views.EleveViewSet object at 0x7ac28e2e6290&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_cls</td>
                    <td class="code"><pre>&lt;class &#x27;competence.views.EleveViewSet&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py</code>, line 524, in get_operation
          

          
            <div class="context" id="c134976025801024">
              
                <ol start="517" class="pre-context" id="pre134976025801024">
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        #   3. on the swagger_auto_schema decorator</pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        view_inspector_cls = overrides.get(&#x27;auto_schema&#x27;, view_inspector_cls)</pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        if view_inspector_cls is None:</pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>            return None</pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        view_inspector = view_inspector_cls(view, path, method, components, request, overrides, operation_keys)</pre></li>
                
                </ol>
              
              <ol start="524" class="context-line">
                <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        operation = view_inspector.get_operation(operation_keys)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='525' class="post-context" id="post134976025801024">
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        if operation is None:</pre></li>
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>            return None</pre></li>
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        if &#x27;consumes&#x27; in operation and set(operation.consumes) == set(self.consumes):</pre></li>
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>            del operation.consumes</pre></li>
                  
                  <li onclick="toggle('pre134976025801024', 'post134976025801024')"><pre>        if &#x27;produces&#x27; in operation and set(operation.produces) == set(self.produces):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025801024">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>components</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e2de390&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;GET&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>operation_keys</td>
                    <td class="code"><pre>[&#x27;eleves&#x27;, &#x27;list&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>overrides</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><pre>&#x27;/api/eleves/&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>prefix</td>
                    <td class="code"><pre>&#x27;/api&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: GET &#x27;/swagger/?format=openapi&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.generators.OpenAPISchemaGenerator object at 0x7ac28e4ef090&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view</td>
                    <td class="code"><pre>&lt;competence.views.EleveViewSet object at 0x7ac28e2e6290&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_inspector</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_inspector_cls</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.inspectors.view.SwaggerAutoSchema&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py</code>, line 45, in get_operation
          

          
            <div class="context" id="c134976025800960">
              
                <ol start="38" class="pre-context" id="pre134976025800960">
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        operation_id = self.get_operation_id(operation_keys)</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        summary, description = self.get_summary_and_description()</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        security = self.get_security()</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        assert security is None or isinstance(security, list), &quot;security must be a list of security requirement objects&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        deprecated = self.is_deprecated()</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        tags = self.get_tags(operation_keys)</pre></li>
                
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre></pre></li>
                
                </ol>
              
              <ol start="45" class="context-line">
                <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        responses = self.get_responses()
                        ^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='46' class="post-context" id="post134976025800960">
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>        return openapi.Operation(</pre></li>
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>            operation_id=operation_id,</pre></li>
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>            description=force_real_str(description),</pre></li>
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>            summary=force_real_str(summary),</pre></li>
                  
                  <li onclick="toggle('pre134976025800960', 'post134976025800960')"><pre>            responses=responses,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800960">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>body</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>consumes</td>
                    <td class="code"><pre>[&#x27;application/json&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>deprecated</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>description</td>
                    <td class="code"><pre>&#x27;&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>operation_id</td>
                    <td class="code"><pre>&#x27;eleves_list&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>operation_keys</td>
                    <td class="code"><pre>[&#x27;eleves&#x27;, &#x27;list&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>parameters</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>produces</td>
                    <td class="code"><pre>[&#x27;application/json&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>security</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>summary</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>tags</td>
                    <td class="code"><pre>[&#x27;eleves&#x27;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py</code>, line 180, in get_responses
          

          
            <div class="context" id="c134976025800896">
              
                <ol start="173" class="pre-context" id="pre134976025800896">
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>    def get_responses(self):</pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        &quot;&quot;&quot;Get the possible responses for this view as a swagger :class:`.Responses` object.</pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        :return: the documented responses</pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        :rtype: openapi.Responses</pre></li>
                
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="180" class="context-line">
                <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        response_serializers = self.get_response_serializers()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='181' class="post-context" id="post134976025800896">
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        return openapi.Responses(</pre></li>
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>            responses=self.get_response_schemas(response_serializers)</pre></li>
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>    def get_default_response_serializer(self):</pre></li>
                  
                  <li onclick="toggle('pre134976025800896', 'post134976025800896')"><pre>        &quot;&quot;&quot;Return the default response serializer for this endpoint. This is derived from either the ``request_body``</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800896">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py</code>, line 235, in get_response_serializers
          

          
            <div class="context" id="c134976025800832">
              
                <ol start="228" class="pre-context" id="pre134976025800832">
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        :rtype: dict</pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        manual_responses = self.overrides.get(&#x27;responses&#x27;, None) or {}</pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        manual_responses = OrderedDict((str(sc), resp) for sc, resp in manual_responses.items())</pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        responses = OrderedDict()</pre></li>
                
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        if not any(is_success(int(sc)) for sc in manual_responses if sc != &#x27;default&#x27;):</pre></li>
                
                </ol>
              
              <ol start="235" class="context-line">
                <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>            responses = self.get_default_responses()
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='236' class="post-context" id="post134976025800832">
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        responses.update((str(sc), resp) for sc, resp in manual_responses.items())</pre></li>
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        return responses</pre></li>
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>    def get_response_schemas(self, response_serializers):</pre></li>
                  
                  <li onclick="toggle('pre134976025800832', 'post134976025800832')"><pre>        &quot;&quot;&quot;Return the :class:`.openapi.Response` objects calculated for this view.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>manual_responses</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>responses</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py</code>, line 211, in get_default_responses
          

          
            <div class="context" id="c134976025800768">
              
                <ol start="204" class="pre-context" id="pre134976025800768">
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        default_status = guess_response_status(method)</pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        default_schema = &#x27;&#x27;</pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        if method in (&#x27;get&#x27;, &#x27;post&#x27;, &#x27;put&#x27;, &#x27;patch&#x27;):</pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>            default_schema = self.get_default_response_serializer()</pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        default_schema = default_schema or &#x27;&#x27;</pre></li>
                
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        if default_schema and not isinstance(default_schema, openapi.Schema):</pre></li>
                
                </ol>
              
              <ol start="211" class="context-line">
                <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>            default_schema = self.serializer_to_schema(default_schema) or &#x27;&#x27;
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='212' class="post-context" id="post134976025800768">
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>        if default_schema:</pre></li>
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>            if self.has_list_response():</pre></li>
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>                default_schema = openapi.Schema(type=openapi.TYPE_ARRAY, items=default_schema)</pre></li>
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>            if self.should_page():</pre></li>
                  
                  <li onclick="toggle('pre134976025800768', 'post134976025800768')"><pre>                default_schema = self.get_paginated_response(default_schema) or default_schema</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800768">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>default_schema</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>default_status</td>
                    <td class="code"><pre>200</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&#x27;get&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 438, in serializer_to_schema
          

          
            <div class="context" id="c134976025800704">
              
                <ol start="431" class="pre-context" id="pre134976025800704">
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>    def serializer_to_schema(self, serializer):</pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        &quot;&quot;&quot;Convert a serializer to an OpenAPI :class:`.Schema`.</pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        :param serializers.BaseSerializer serializer: the ``Serializer`` instance</pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        :returns: the converted :class:`.Schema`, or ``None`` in case of an unknown serializer</pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        :rtype: openapi.Schema or openapi.SchemaRef</pre></li>
                
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="438" class="context-line">
                <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        return self.probe_inspectors(
                    </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='439' class="post-context" id="post134976025800704">
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>            self.field_inspectors, &#x27;get_schema&#x27;, serializer, {&#x27;field_inspectors&#x27;: self.field_inspectors}</pre></li>
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>    def serializer_to_parameters(self, serializer, in_):</pre></li>
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre>        &quot;&quot;&quot;Convert a serializer to a possibly empty list of :class:`.Parameter`\\ s.</pre></li>
                  
                  <li onclick="toggle('pre134976025800704', 'post134976025800704')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800704">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 110, in probe_inspectors
          

          
            <div class="context" id="c134976025800640">
              
                <ol start="103" class="pre-context" id="pre134976025800640">
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            inspector = inspector(self.view, self.path, self.method, self.components, self.request, **initkwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            tried_inspectors.append(inspector)</pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            method = getattr(inspector, method_name, None)</pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            if method is None:</pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>                continue</pre></li>
                
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre></pre></li>
                
                </ol>
              
              <ol start="110" class="context-line">
                <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            result = method(obj, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='111' class="post-context" id="post134976025800640">
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            if result is not NotHandled:</pre></li>
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>                break</pre></li>
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>        else:  # pragma: no cover</pre></li>
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            logger.warning(&quot;%s ignored because no inspector in %s handled it (operation: %s)&quot;,</pre></li>
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>                           obj, inspectors, method_name)</pre></li>
                  
                  <li onclick="toggle('pre134976025800640', 'post134976025800640')"><pre>            result = None</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800640">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;field_inspectors&#x27;: [&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspector</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspectors</td>
                    <td class="code"><pre>[&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;bound method InlineSerializerInspector.get_schema of &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method_name</td>
                    <td class="code"><pre>&#x27;get_schema&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.view.SwaggerAutoSchema object at 0x7ac28e2ea050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>tried_inspectors</td>
                    <td class="code"><pre>[&lt;drf_yasg.inspectors.field.CamelCaseJSONFilter object at 0x7ac28e117410&gt;,
 &lt;drf_yasg.inspectors.field.RecursiveFieldInspector object at 0x7ac28e1175d0&gt;,
 &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 38, in get_schema
          

          
            <div class="context" id="c134976025753472">
              
                <ol start="31" class="pre-context" id="pre134976025753472">
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>class InlineSerializerInspector(SerializerInspector):</pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>    &quot;&quot;&quot;Provides serializer conversions using :meth:`.FieldInspector.field_to_swagger_object`.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>    #: whether to output :class:`.Schema` definitions inline or into the ``definitions`` section</pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>    use_definitions = False</pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>    def get_schema(self, serializer):</pre></li>
                
                </ol>
              
              <ol start="38" class="context-line">
                <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>        return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='39' class="post-context" id="post134976025753472">
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>    def add_manual_parameters(self, serializer, parameters):</pre></li>
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>        &quot;&quot;&quot;Add/replace parameters from the given list of automatically generated request parameters. This method</pre></li>
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>        is called only when the serializer is converted into a list of parameters for use in a form data request.</pre></li>
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025753472', 'post134976025753472')"><pre>        :param serializer: serializer instance</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025753472">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 228, in probe_field_inspectors
          

          
            <div class="context" id="c134976025753408">
              
                <ol start="221" class="pre-context" id="pre134976025753408">
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>    def probe_field_inspectors(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        &quot;&quot;&quot;Helper method for recursively probing `field_inspectors` to handle a given field.</pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        All arguments are the same as :meth:`.field_to_swagger_object`.</pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        :rtype: openapi.Parameter or openapi.Items or openapi.Schema or openapi.SchemaRef</pre></li>
                
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="228" class="context-line">
                <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        return self.probe_inspectors(
                    </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='229' class="post-context" id="post134976025753408">
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>            self.field_inspectors, &#x27;field_to_swagger_object&#x27;, field, {&#x27;field_inspectors&#x27;: self.field_inspectors},</pre></li>
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>            swagger_object_type=swagger_object_type, use_references=use_references, **kwargs</pre></li>
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>    def _get_partial_types(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976025753408', 'post134976025753408')"><pre>        &quot;&quot;&quot;Helper method to extract generic information from a field and return a partial constructor for the</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025753408">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 110, in probe_inspectors
          

          
            <div class="context" id="c134976025800576">
              
                <ol start="103" class="pre-context" id="pre134976025800576">
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            inspector = inspector(self.view, self.path, self.method, self.components, self.request, **initkwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            tried_inspectors.append(inspector)</pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            method = getattr(inspector, method_name, None)</pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            if method is None:</pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>                continue</pre></li>
                
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre></pre></li>
                
                </ol>
              
              <ol start="110" class="context-line">
                <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            result = method(obj, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='111' class="post-context" id="post134976025800576">
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            if result is not NotHandled:</pre></li>
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>                break</pre></li>
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>        else:  # pragma: no cover</pre></li>
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            logger.warning(&quot;%s ignored because no inspector in %s handled it (operation: %s)&quot;,</pre></li>
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>                           obj, inspectors, method_name)</pre></li>
                  
                  <li onclick="toggle('pre134976025800576', 'post134976025800576')"><pre>            result = None</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800576">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;field_inspectors&#x27;: [&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspector</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspectors</td>
                    <td class="code"><pre>[&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;swagger_object_type&#x27;: &lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;,
 &#x27;use_references&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;bound method InlineSerializerInspector.field_to_swagger_object of &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method_name</td>
                    <td class="code"><pre>&#x27;field_to_swagger_object&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>&lt;object object at 0x7ac29290e6b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e1176d0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>tried_inspectors</td>
                    <td class="code"><pre>[&lt;drf_yasg.inspectors.field.CamelCaseJSONFilter object at 0x7ac28e117850&gt;,
 &lt;drf_yasg.inspectors.field.RecursiveFieldInspector object at 0x7ac28e1178d0&gt;,
 &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 129, in field_to_swagger_object
          

          
            <div class="context" id="c134976025800512">
              
                <ol start="122" class="pre-context" id="pre134976025800512">
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>                setattr(result, &#x27;_NP_serializer&#x27;, get_serializer_class(serializer))</pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>                return result</pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            if not ref_name or not use_references:</pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>                return make_schema_definition()</pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            definitions = self.components.with_scope(openapi.SCHEMA_DEFINITIONS)</pre></li>
                
                </ol>
              
              <ol start="129" class="context-line">
                <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            actual_schema = definitions.setdefault(ref_name, make_schema_definition)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='130' class="post-context" id="post134976025800512">
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            actual_schema._remove_read_only()</pre></li>
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            actual_serializer = getattr(actual_schema, &#x27;_NP_serializer&#x27;, None)</pre></li>
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            this_serializer = get_serializer_class(field)</pre></li>
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>            if actual_serializer and actual_serializer != this_serializer:</pre></li>
                  
                  <li onclick="toggle('pre134976025800512', 'post134976025800512')"><pre>                explicit_refs = self._has_ref_name(actual_serializer) and self._has_ref_name(this_serializer)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800512">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ChildSwaggerType</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>SwaggerType</td>
                    <td class="code"><pre>&lt;function FieldInspector._get_partial_types.&lt;locals&gt;.SwaggerType at 0x7ac28e2ca3e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>definitions</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e117a90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>make_schema_definition</td>
                    <td class="code"><pre>&lt;function InlineSerializerInspector.field_to_swagger_object.&lt;locals&gt;.make_schema_definition at 0x7ac28e2c9260&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ref_name</td>
                    <td class="code"><pre>&#x27;Eleve&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/openapi.py</code>, line 685, in setdefault
          

          
            <div class="context" id="c134976025793856">
              
                <ol start="678" class="pre-context" id="pre134976025793856">
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        :param function maker: object factory, called only if necessary</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        :param str scope: reference scope</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        scope = self._check_scope(scope)</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        assert callable(maker), &quot;setdefault expects a callable, not %s&quot; % type(maker).__name__</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        ret = self.getdefault(name, None, scope)</pre></li>
                
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>        if ret is None:</pre></li>
                
                </ol>
              
              <ol start="685" class="context-line">
                <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>            ret = maker()
                       ^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='686' class="post-context" id="post134976025793856">
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>            value = self.getdefault(name, None, scope)</pre></li>
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>            assert ret is not None, &quot;maker returned None; referenced objects cannot be None/null&quot;</pre></li>
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>            if value is None:</pre></li>
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>                self.set(name, ret, scope)</pre></li>
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>            elif value != ret:</pre></li>
                  
                  <li onclick="toggle('pre134976025793856', 'post134976025793856')"><pre>                logger.debug(&quot;during setdefault, maker for %s inserted a value and returned a different value&quot;, name)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025793856">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>maker</td>
                    <td class="code"><pre>&lt;function InlineSerializerInspector.field_to_swagger_object.&lt;locals&gt;.make_schema_definition at 0x7ac28e2c9260&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;Eleve&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>scope</td>
                    <td class="code"><pre>&#x27;definitions&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e117a90&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 105, in make_schema_definition
          

          
            <div class="context" id="c134976025792832">
              
                <ol start="98" class="pre-context" id="pre134976025792832">
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                for property_name, child in serializer.fields.items():</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    property_name = self.get_property_name(property_name)</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    prop_kwargs = {</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                        &#x27;read_only&#x27;: bool(child.read_only) or None</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    }</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    prop_kwargs = filter_none(prop_kwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre></pre></li>
                
                </ol>
              
              <ol start="105" class="context-line">
                <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    child_schema = self.probe_field_inspectors(
                                        </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='106' class="post-context" id="post134976025792832">
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                        child, ChildSwaggerType, use_references, **prop_kwargs</pre></li>
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    )</pre></li>
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    properties[property_name] = child_schema</pre></li>
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                    if child.required and not getattr(child_schema, &#x27;read_only&#x27;, False):</pre></li>
                  
                  <li onclick="toggle('pre134976025792832', 'post134976025792832')"><pre>                        required.append(property_name)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025792832">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ChildSwaggerType</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>SwaggerType</td>
                    <td class="code"><pre>&lt;function FieldInspector._get_partial_types.&lt;locals&gt;.SwaggerType at 0x7ac28e2ca3e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>child</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>child_schema</td>
                    <td class="code"><pre>Schema([(&#x27;title&#x27;, &#x27;Textnote3&#x27;), (&#x27;type&#x27;, &#x27;string&#x27;), (&#x27;x-nullable&#x27;, True)])</pre></td>
                  </tr>
                
                  <tr>
                    <td>prop_kwargs</td>
                    <td class="code"><pre>{&#x27;read_only&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>properties</td>
                    <td class="code"><pre>OrderedDict([(&#x27;id&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;ID&#x27;),
                      (&#x27;type&#x27;, &#x27;integer&#x27;),
                      (&#x27;readOnly&#x27;, True)])),
             (&#x27;nom&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Nom&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;maxLength&#x27;, 100),
                      (&#x27;minLength&#x27;, 1)])),
             (&#x27;prenom&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Prenom&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;maxLength&#x27;, 100),
                      (&#x27;minLength&#x27;, 1)])),
             (&#x27;classe&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Classe&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;maxLength&#x27;, 10),
                      (&#x27;minLength&#x27;, 1)])),
             (&#x27;textnote1&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Textnote1&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;x-nullable&#x27;, True)])),
             (&#x27;textnote2&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Textnote2&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;x-nullable&#x27;, True)])),
             (&#x27;textnote3&#x27;,
              Schema([(&#x27;title&#x27;, &#x27;Textnote3&#x27;),
                      (&#x27;type&#x27;, &#x27;string&#x27;),
                      (&#x27;x-nullable&#x27;, True)]))])</pre></td>
                  </tr>
                
                  <tr>
                    <td>property_name</td>
                    <td class="code"><pre>&#x27;professeurs&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>required</td>
                    <td class="code"><pre>[&#x27;nom&#x27;, &#x27;prenom&#x27;, &#x27;classe&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 228, in probe_field_inspectors
          

          
            <div class="context" id="c134976025794496">
              
                <ol start="221" class="pre-context" id="pre134976025794496">
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>    def probe_field_inspectors(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        &quot;&quot;&quot;Helper method for recursively probing `field_inspectors` to handle a given field.</pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        All arguments are the same as :meth:`.field_to_swagger_object`.</pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        :rtype: openapi.Parameter or openapi.Items or openapi.Schema or openapi.SchemaRef</pre></li>
                
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="228" class="context-line">
                <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        return self.probe_inspectors(
                    </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='229' class="post-context" id="post134976025794496">
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>            self.field_inspectors, &#x27;field_to_swagger_object&#x27;, field, {&#x27;field_inspectors&#x27;: self.field_inspectors},</pre></li>
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>            swagger_object_type=swagger_object_type, use_references=use_references, **kwargs</pre></li>
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>    def _get_partial_types(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976025794496', 'post134976025794496')"><pre>        &quot;&quot;&quot;Helper method to extract generic information from a field and return a partial constructor for the</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025794496">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;read_only&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 110, in probe_inspectors
          

          
            <div class="context" id="c134976025800448">
              
                <ol start="103" class="pre-context" id="pre134976025800448">
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            inspector = inspector(self.view, self.path, self.method, self.components, self.request, **initkwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            tried_inspectors.append(inspector)</pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            method = getattr(inspector, method_name, None)</pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            if method is None:</pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>                continue</pre></li>
                
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre></pre></li>
                
                </ol>
              
              <ol start="110" class="context-line">
                <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            result = method(obj, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='111' class="post-context" id="post134976025800448">
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            if result is not NotHandled:</pre></li>
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>                break</pre></li>
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>        else:  # pragma: no cover</pre></li>
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            logger.warning(&quot;%s ignored because no inspector in %s handled it (operation: %s)&quot;,</pre></li>
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>                           obj, inspectors, method_name)</pre></li>
                  
                  <li onclick="toggle('pre134976025800448', 'post134976025800448')"><pre>            result = None</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;field_inspectors&#x27;: [&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspector</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspectors</td>
                    <td class="code"><pre>[&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;read_only&#x27;: True,
 &#x27;swagger_object_type&#x27;: &lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;,
 &#x27;use_references&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;bound method InlineSerializerInspector.field_to_swagger_object of &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method_name</td>
                    <td class="code"><pre>&#x27;field_to_swagger_object&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>&lt;object object at 0x7ac29290e6b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e117890&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>tried_inspectors</td>
                    <td class="code"><pre>[&lt;drf_yasg.inspectors.field.CamelCaseJSONFilter object at 0x7ac28e121390&gt;,
 &lt;drf_yasg.inspectors.field.RecursiveFieldInspector object at 0x7ac28e121190&gt;,
 &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 82, in field_to_swagger_object
          

          
            <div class="context" id="c134976025793280">
              
                <ol start="75" class="pre-context" id="pre134976025793280">
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>        serializer_meta = getattr(serializer, &#x27;Meta&#x27;, None)</pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>        return hasattr(serializer_meta, &#x27;ref_name&#x27;)</pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>    def field_to_swagger_object(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>        SwaggerType, ChildSwaggerType = self._get_partial_types(field, swagger_object_type, use_references, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>        if isinstance(field, (serializers.ListSerializer, serializers.ListField)):</pre></li>
                
                </ol>
              
              <ol start="82" class="context-line">
                <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>            child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='83' class="post-context" id="post134976025793280">
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>            limits = find_limits(field) or {}</pre></li>
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>            return SwaggerType(</pre></li>
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>                type=openapi.TYPE_ARRAY,</pre></li>
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>                items=child_schema,</pre></li>
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>                **limits</pre></li>
                  
                  <li onclick="toggle('pre134976025793280', 'post134976025793280')"><pre>            )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025793280">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ChildSwaggerType</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>SwaggerType</td>
                    <td class="code"><pre>&lt;function FieldInspector._get_partial_types.&lt;locals&gt;.SwaggerType at 0x7ac28e2ca840&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;read_only&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 228, in probe_field_inspectors
          

          
            <div class="context" id="c134976025793216">
              
                <ol start="221" class="pre-context" id="pre134976025793216">
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>    def probe_field_inspectors(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        &quot;&quot;&quot;Helper method for recursively probing `field_inspectors` to handle a given field.</pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        All arguments are the same as :meth:`.field_to_swagger_object`.</pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        :rtype: openapi.Parameter or openapi.Items or openapi.Schema or openapi.SchemaRef</pre></li>
                
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="228" class="context-line">
                <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        return self.probe_inspectors(
                    </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='229' class="post-context" id="post134976025793216">
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>            self.field_inspectors, &#x27;field_to_swagger_object&#x27;, field, {&#x27;field_inspectors&#x27;: self.field_inspectors},</pre></li>
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>            swagger_object_type=swagger_object_type, use_references=use_references, **kwargs</pre></li>
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>    def _get_partial_types(self, field, swagger_object_type, use_references, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976025793216', 'post134976025793216')"><pre>        &quot;&quot;&quot;Helper method to extract generic information from a field and return a partial constructor for the</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025793216">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py</code>, line 110, in probe_inspectors
          

          
            <div class="context" id="c134976025800384">
              
                <ol start="103" class="pre-context" id="pre134976025800384">
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            inspector = inspector(self.view, self.path, self.method, self.components, self.request, **initkwargs)</pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            tried_inspectors.append(inspector)</pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            method = getattr(inspector, method_name, None)</pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            if method is None:</pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>                continue</pre></li>
                
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre></pre></li>
                
                </ol>
              
              <ol start="110" class="context-line">
                <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            result = method(obj, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='111' class="post-context" id="post134976025800384">
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            if result is not NotHandled:</pre></li>
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>                break</pre></li>
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>        else:  # pragma: no cover</pre></li>
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            logger.warning(&quot;%s ignored because no inspector in %s handled it (operation: %s)&quot;,</pre></li>
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>                           obj, inspectors, method_name)</pre></li>
                  
                  <li onclick="toggle('pre134976025800384', 'post134976025800384')"><pre>            result = None</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800384">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{&#x27;field_inspectors&#x27;: [&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
                      &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]}</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspector</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121450&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>inspectors</td>
                    <td class="code"><pre>[&lt;class &#x27;drf_yasg.inspectors.field.CamelCaseJSONFilter&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RecursiveFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ReferencingSerializerInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.ChoiceFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.FileFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.DictFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.JSONFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.HiddenFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.RelatedFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SerializerMethodFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.SimpleFieldInspector&#x27;&gt;,
 &lt;class &#x27;drf_yasg.inspectors.field.StringDefaultFieldInspector&#x27;&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;swagger_object_type&#x27;: &lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;,
 &#x27;use_references&#x27;: True}</pre></td>
                  </tr>
                
                  <tr>
                    <td>method</td>
                    <td class="code"><pre>&lt;bound method InlineSerializerInspector.field_to_swagger_object of &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121450&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>method_name</td>
                    <td class="code"><pre>&#x27;field_to_swagger_object&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>obj</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>result</td>
                    <td class="code"><pre>&lt;object object at 0x7ac29290e6b0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121750&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>tried_inspectors</td>
                    <td class="code"><pre>[&lt;drf_yasg.inspectors.field.CamelCaseJSONFilter object at 0x7ac28e1211d0&gt;,
 &lt;drf_yasg.inspectors.field.RecursiveFieldInspector object at 0x7ac28e1218d0&gt;,
 &lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121450&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 129, in field_to_swagger_object
          

          
            <div class="context" id="c134976025800320">
              
                <ol start="122" class="pre-context" id="pre134976025800320">
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>                setattr(result, &#x27;_NP_serializer&#x27;, get_serializer_class(serializer))</pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>                return result</pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            if not ref_name or not use_references:</pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>                return make_schema_definition()</pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            definitions = self.components.with_scope(openapi.SCHEMA_DEFINITIONS)</pre></li>
                
                </ol>
              
              <ol start="129" class="context-line">
                <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            actual_schema = definitions.setdefault(ref_name, make_schema_definition)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='130' class="post-context" id="post134976025800320">
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            actual_schema._remove_read_only()</pre></li>
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            actual_serializer = getattr(actual_schema, &#x27;_NP_serializer&#x27;, None)</pre></li>
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            this_serializer = get_serializer_class(field)</pre></li>
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>            if actual_serializer and actual_serializer != this_serializer:</pre></li>
                  
                  <li onclick="toggle('pre134976025800320', 'post134976025800320')"><pre>                explicit_refs = self._has_ref_name(actual_serializer) and self._has_ref_name(this_serializer)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800320">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ChildSwaggerType</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>SwaggerType</td>
                    <td class="code"><pre>&lt;function FieldInspector._get_partial_types.&lt;locals&gt;.SwaggerType at 0x7ac28e2ca8e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>definitions</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e122050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>make_schema_definition</td>
                    <td class="code"><pre>&lt;function InlineSerializerInspector.field_to_swagger_object.&lt;locals&gt;.make_schema_definition at 0x7ac28e2ca520&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ref_name</td>
                    <td class="code"><pre>&#x27;User&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121450&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>swagger_object_type</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/openapi.py</code>, line 685, in setdefault
          

          
            <div class="context" id="c134976025800256">
              
                <ol start="678" class="pre-context" id="pre134976025800256">
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        :param function maker: object factory, called only if necessary</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        :param str scope: reference scope</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        scope = self._check_scope(scope)</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        assert callable(maker), &quot;setdefault expects a callable, not %s&quot; % type(maker).__name__</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        ret = self.getdefault(name, None, scope)</pre></li>
                
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>        if ret is None:</pre></li>
                
                </ol>
              
              <ol start="685" class="context-line">
                <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>            ret = maker()
                       ^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='686' class="post-context" id="post134976025800256">
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>            value = self.getdefault(name, None, scope)</pre></li>
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>            assert ret is not None, &quot;maker returned None; referenced objects cannot be None/null&quot;</pre></li>
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>            if value is None:</pre></li>
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>                self.set(name, ret, scope)</pre></li>
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>            elif value != ret:</pre></li>
                  
                  <li onclick="toggle('pre134976025800256', 'post134976025800256')"><pre>                logger.debug(&quot;during setdefault, maker for %s inserted a value and returned a different value&quot;, name)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800256">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>maker</td>
                    <td class="code"><pre>&lt;function InlineSerializerInspector.field_to_swagger_object.&lt;locals&gt;.make_schema_definition at 0x7ac28e2ca520&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;User&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>scope</td>
                    <td class="code"><pre>&#x27;definitions&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.openapi.ReferenceResolver object at 0x7ac28e122050&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py</code>, line 98, in make_schema_definition
          

          
            <div class="context" id="c134976025800192">
              
                <ol start="91" class="pre-context" id="pre134976025800192">
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                raise SwaggerGenerationError(&quot;cannot instantiate nested serializer as &quot; + swagger_object_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>            ref_name = self.get_serializer_ref_name(field)</pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>            def make_schema_definition(serializer=field):</pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                properties = OrderedDict()</pre></li>
                
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                required = []</pre></li>
                
                </ol>
              
              <ol start="98" class="context-line">
                <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                for property_name, child in serializer.fields.items():
                                                ^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='99' class="post-context" id="post134976025800192">
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                    property_name = self.get_property_name(property_name)</pre></li>
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                    prop_kwargs = {</pre></li>
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                        &#x27;read_only&#x27;: bool(child.read_only) or None</pre></li>
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                    }</pre></li>
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre>                    prop_kwargs = filter_none(prop_kwargs)</pre></li>
                  
                  <li onclick="toggle('pre134976025800192', 'post134976025800192')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800192">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ChildSwaggerType</td>
                    <td class="code"><pre>&lt;class &#x27;drf_yasg.openapi.Schema&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>SwaggerType</td>
                    <td class="code"><pre>&lt;function FieldInspector._get_partial_types.&lt;locals&gt;.SwaggerType at 0x7ac28e2ca8e0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>properties</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>required</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;drf_yasg.inspectors.field.ReferencingSerializerInspector object at 0x7ac28e121450&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_references</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/utils/functional.py</code>, line 57, in __get__
          

          
            <div class="context" id="c134976025800064">
              
                <ol start="50" class="pre-context" id="pre134976025800064">
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        Call the function and put the return value in instance.__dict__ so that</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        subsequent attribute access on the instance returns the cached value</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        instead of calling cached_property.__get__().</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        if instance is None:</pre></li>
                
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>            return self</pre></li>
                
                </ol>
              
              <ol start="57" class="context-line">
                <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        res = instance.__dict__[self.name] = self.func(instance)
                                                 ^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='58' class="post-context" id="post134976025800064">
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>        return res</pre></li>
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>class classproperty:</pre></li>
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>    &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre134976025800064', 'post134976025800064')"><pre>    Decorator that converts a method with a single cls argument into a property</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800064">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;competence.serializers.UserSerializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.utils.functional.cached_property object at 0x7ac28e7d2090&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 372, in fields
          

          
            <div class="context" id="c134976025800000">
              
                <ol start="365" class="pre-context" id="pre134976025800000">
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        A dictionary of {field_name: field_instance}.</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        # `fields` is evaluated lazily. We do this to ensure that we don&#x27;t</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        # have issues importing modules that use ModelSerializers as fields,</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        # even if Django&#x27;s app-loading stage has not yet run.</pre></li>
                
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        fields = BindingDict(self)</pre></li>
                
                </ol>
              
              <ol start="372" class="context-line">
                <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        for key, value in self.get_fields().items():
                               ^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='373' class="post-context" id="post134976025800000">
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>            fields[key] = value</pre></li>
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        return fields</pre></li>
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>    @property</pre></li>
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>    def _writable_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre134976025800000', 'post134976025800000')"><pre>        for field in self.fields.values():</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025800000">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 1103, in get_fields
          

          
            <div class="context" id="c134976025799808">
              
                <ol start="1096" class="pre-context" id="pre134976025799808">
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            extra_field_kwargs = extra_kwargs.get(field_name, {})</pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            source = extra_field_kwargs.get(&#x27;source&#x27;, &#x27;*&#x27;)</pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            if source == &#x27;*&#x27;:</pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>                source = field_name</pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            # Determine the serializer field class and keyword arguments.</pre></li>
                
                </ol>
              
              <ol start="1103" class="context-line">
                <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            field_class, field_kwargs = self.build_field(
                                              </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1104' class="post-context" id="post134976025799808">
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>                source, info, model, depth</pre></li>
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            # Include any kwargs defined in `Meta.extra_kwargs`</pre></li>
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>            field_kwargs = self.include_extra_kwargs(</pre></li>
                  
                  <li onclick="toggle('pre134976025799808', 'post134976025799808')"><pre>                field_kwargs, extra_field_kwargs</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976025799808">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>declared_fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_field_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_class</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework.fields.CharField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_kwargs</td>
                    <td class="code"><pre>{&#x27;allow_blank&#x27;: True, &#x27;max_length&#x27;: 150, &#x27;required&#x27;: False}</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;schoolName&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_names</td>
                    <td class="code"><pre>[&#x27;id&#x27;, &#x27;username&#x27;, &#x27;first_name&#x27;, &#x27;last_name&#x27;, &#x27;schoolName&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>{&#x27;first_name&#x27;: CharField(allow_blank=True, max_length=150, required=False),
 &#x27;id&#x27;: IntegerField(label=&#x27;ID&#x27;, read_only=True),
 &#x27;last_name&#x27;: CharField(allow_blank=True, max_length=150, required=False),
 &#x27;username&#x27;: CharField(help_text=&#x27;Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.&#x27;, max_length=150, validators=[&lt;django.contrib.auth.validators.UnicodeUsernameValidator object&gt;, &lt;UniqueValidator(queryset=User.objects.all())&gt;])}</pre></td>
                  </tr>
                
                  <tr>
                    <td>hidden_fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldInfo(pk=&lt;django.db.models.fields.AutoField: id&gt;, fields={&#x27;password&#x27;: &lt;django.db.models.fields.CharField: password&gt;, &#x27;last_login&#x27;: &lt;django.db.models.fields.DateTimeField: last_login&gt;, &#x27;is_superuser&#x27;: &lt;django.db.models.fields.BooleanField: is_superuser&gt;, &#x27;username&#x27;: &lt;django.db.models.fields.CharField: username&gt;, &#x27;first_name&#x27;: &lt;django.db.models.fields.CharField: first_name&gt;, &#x27;last_name&#x27;: &lt;django.db.models.fields.CharField: last_name&gt;, &#x27;email&#x27;: &lt;django.db.models.fields.EmailField: email&gt;, &#x27;is_staff&#x27;: &lt;django.db.models.fields.BooleanField: is_staff&gt;, &#x27;is_active&#x27;: &lt;django.db.models.fields.BooleanField: is_active&gt;, &#x27;date_joined&#x27;: &lt;django.db.models.fields.DateTimeField: date_joined&gt;}, forward_relations={&#x27;groups&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: groups&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Group&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;user_permissions&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: user_permissions&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Permission&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False)}, reverse_relations={&#x27;logentry_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;django.contrib.admin.models.LogEntry&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;resultat_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Resultat&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;resultatdetail_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.ResultatDetail&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;eleves&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Eleve&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)}, fields_and_pk={&#x27;pk&#x27;: &lt;django.db.models.fields.AutoField: id&gt;, &#x27;id&#x27;: &lt;django.db.models.fields.AutoField: id&gt;, &#x27;password&#x27;: &lt;django.db.models.fields.CharField: password&gt;, &#x27;last_login&#x27;: &lt;django.db.models.fields.DateTimeField: last_login&gt;, &#x27;is_superuser&#x27;: &lt;django.db.models.fields.BooleanField: is_superuser&gt;, &#x27;username&#x27;: &lt;django.db.models.fields.CharField: username&gt;, &#x27;first_name&#x27;: &lt;django.db.models.fields.CharField: first_name&gt;, &#x27;last_name&#x27;: &lt;django.db.models.fields.CharField: last_name&gt;, &#x27;email&#x27;: &lt;django.db.models.fields.EmailField: email&gt;, &#x27;is_staff&#x27;: &lt;django.db.models.fields.BooleanField: is_staff&gt;, &#x27;is_active&#x27;: &lt;django.db.models.fields.BooleanField: is_active&gt;, &#x27;date_joined&#x27;: &lt;django.db.models.fields.DateTimeField: date_joined&gt;}, relations={&#x27;groups&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: groups&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Group&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;user_permissions&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: user_permissions&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Permission&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;logentry_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;django.contrib.admin.models.LogEntry&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;resultat_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Resultat&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;resultatdetail_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.ResultatDetail&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;eleves&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Eleve&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)})</pre></td>
                  </tr>
                
                  <tr>
                    <td>model</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
                  <tr>
                    <td>source</td>
                    <td class="code"><pre>&#x27;schoolName&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 1249, in build_field
          

          
            <div class="context" id="c134976027669184">
              
                <ol start="1242" class="pre-context" id="pre134976027669184">
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        elif hasattr(model_class, field_name):</pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>            return self.build_property_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        elif field_name == self.url_field_name:</pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>            return self.build_url_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre></pre></li>
                
                </ol>
              
              <ol start="1249" class="context-line">
                <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        return self.build_unknown_field(field_name, model_class)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1250' class="post-context" id="post134976027669184">
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>    def build_standard_field(self, field_name, model_field):</pre></li>
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        Create regular model fields.</pre></li>
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre134976027669184', 'post134976027669184')"><pre>        field_mapping = ClassLookupDict(self.serializer_field_mapping)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976027669184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;schoolName&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldInfo(pk=&lt;django.db.models.fields.AutoField: id&gt;, fields={&#x27;password&#x27;: &lt;django.db.models.fields.CharField: password&gt;, &#x27;last_login&#x27;: &lt;django.db.models.fields.DateTimeField: last_login&gt;, &#x27;is_superuser&#x27;: &lt;django.db.models.fields.BooleanField: is_superuser&gt;, &#x27;username&#x27;: &lt;django.db.models.fields.CharField: username&gt;, &#x27;first_name&#x27;: &lt;django.db.models.fields.CharField: first_name&gt;, &#x27;last_name&#x27;: &lt;django.db.models.fields.CharField: last_name&gt;, &#x27;email&#x27;: &lt;django.db.models.fields.EmailField: email&gt;, &#x27;is_staff&#x27;: &lt;django.db.models.fields.BooleanField: is_staff&gt;, &#x27;is_active&#x27;: &lt;django.db.models.fields.BooleanField: is_active&gt;, &#x27;date_joined&#x27;: &lt;django.db.models.fields.DateTimeField: date_joined&gt;}, forward_relations={&#x27;groups&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: groups&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Group&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;user_permissions&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: user_permissions&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Permission&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False)}, reverse_relations={&#x27;logentry_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;django.contrib.admin.models.LogEntry&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;resultat_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Resultat&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;resultatdetail_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.ResultatDetail&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;eleves&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Eleve&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)}, fields_and_pk={&#x27;pk&#x27;: &lt;django.db.models.fields.AutoField: id&gt;, &#x27;id&#x27;: &lt;django.db.models.fields.AutoField: id&gt;, &#x27;password&#x27;: &lt;django.db.models.fields.CharField: password&gt;, &#x27;last_login&#x27;: &lt;django.db.models.fields.DateTimeField: last_login&gt;, &#x27;is_superuser&#x27;: &lt;django.db.models.fields.BooleanField: is_superuser&gt;, &#x27;username&#x27;: &lt;django.db.models.fields.CharField: username&gt;, &#x27;first_name&#x27;: &lt;django.db.models.fields.CharField: first_name&gt;, &#x27;last_name&#x27;: &lt;django.db.models.fields.CharField: last_name&gt;, &#x27;email&#x27;: &lt;django.db.models.fields.EmailField: email&gt;, &#x27;is_staff&#x27;: &lt;django.db.models.fields.BooleanField: is_staff&gt;, &#x27;is_active&#x27;: &lt;django.db.models.fields.BooleanField: is_active&gt;, &#x27;date_joined&#x27;: &lt;django.db.models.fields.DateTimeField: date_joined&gt;}, relations={&#x27;groups&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: groups&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Group&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;user_permissions&#x27;: RelationInfo(model_field=&lt;django.db.models.fields.related.ManyToManyField: user_permissions&gt;, related_model=&lt;class &#x27;django.contrib.auth.models.Permission&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=False), &#x27;logentry_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;django.contrib.admin.models.LogEntry&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True), &#x27;resultat_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Resultat&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;resultatdetail_set&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.ResultatDetail&#x27;&gt;, to_many=True, to_field=&#x27;id&#x27;, has_through_model=False, reverse=True), &#x27;eleves&#x27;: RelationInfo(model_field=None, related_model=&lt;class &#x27;competence.models.Eleve&#x27;&gt;, to_many=True, to_field=None, has_through_model=False, reverse=True)})</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>nested_depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py</code>, line 1367, in build_unknown_field
          

          
            <div class="context" id="c134976027671232">
              
                <ol start="1360" class="pre-context" id="pre134976027671232">
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        return field_class, field_kwargs</pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre></pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>    def build_unknown_field(self, field_name, model_class):</pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        Raise an error on any unknown fields.</pre></li>
                
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1367" class="context-line">
                <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        raise ImproperlyConfigured(
              ^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1368' class="post-context" id="post134976027671232">
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>            &#x27;Field name `%s` is not valid for model `%s` in `%s.%s`.&#x27; %</pre></li>
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>            (field_name, model_class.__name__, self.__class__.__module__, self.__class__.__name__)</pre></li>
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre></pre></li>
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>    def include_extra_kwargs(self, kwargs, extra_kwargs):</pre></li>
                  
                  <li onclick="toggle('pre134976027671232', 'post134976027671232')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v134976027671232">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#x27;schoolName&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#x27;django.contrib.auth.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ImproperlyConfigured: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ImproperlyConfigured at /swagger/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://127.0.0.1:8000/swagger/?format=openapi

Django Version: 4.2.16
Python Version: 3.11.4
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;competence&#x27;]
Installed Middleware:
[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/views.py", line 96, in get
    schema = generator.get_schema(request, self.public)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py", line 276, in get_schema
    paths, prefix = self.get_paths(endpoints, components, request, public)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py", line 482, in get_paths
    operation = self.get_operation(view, path, prefix, method, components, request)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/generators.py", line 524, in get_operation
    operation = view_inspector.get_operation(operation_keys)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py", line 45, in get_operation
    responses = self.get_responses()
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py", line 180, in get_responses
    response_serializers = self.get_response_serializers()
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py", line 235, in get_response_serializers
    responses = self.get_default_responses()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/view.py", line 211, in get_default_responses
    default_schema = self.serializer_to_schema(default_schema) or &#x27;&#x27;
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 438, in serializer_to_schema
    return self.probe_inspectors(
           
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 110, in probe_inspectors
    result = method(obj, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 38, in get_schema
    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 228, in probe_field_inspectors
    return self.probe_inspectors(
           
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 110, in probe_inspectors
    result = method(obj, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 129, in field_to_swagger_object
    actual_schema = definitions.setdefault(ref_name, make_schema_definition)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/openapi.py", line 685, in setdefault
    ret = maker()
          ^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 105, in make_schema_definition
    child_schema = self.probe_field_inspectors(
                   
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 228, in probe_field_inspectors
    return self.probe_inspectors(
           
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 110, in probe_inspectors
    result = method(obj, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 82, in field_to_swagger_object
    child_schema = self.probe_field_inspectors(field.child, ChildSwaggerType, use_references)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 228, in probe_field_inspectors
    return self.probe_inspectors(
           
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/base.py", line 110, in probe_inspectors
    result = method(obj, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 129, in field_to_swagger_object
    actual_schema = definitions.setdefault(ref_name, make_schema_definition)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/openapi.py", line 685, in setdefault
    ret = maker()
          ^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/drf_yasg/inspectors/field.py", line 98, in make_schema_definition
    for property_name, child in serializer.fields.items():
                                ^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py", line 372, in fields
    for key, value in self.get_fields().items():
                      ^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py", line 1103, in get_fields
    field_class, field_kwargs = self.build_field(
                                
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py", line 1249, in build_field
    return self.build_unknown_field(field_name, model_class)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/nathalie/coding/nathabee-cloud/competence_project/venv/lib/python3.11/site-packages/rest_framework/serializers.py", line 1367, in build_unknown_field
    raise ImproperlyConfigured(
    ^

Exception Type: ImproperlyConfigured at /swagger/
Exception Value: Field name `schoolName` is not valid for model `User` in `competence.serializers.UserSerializer`.
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>format</td>
            <td class="code"><pre>&#x27;openapi&#x27;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_EXE</td>
          <td class="code"><pre>&#x27;/home/nathalie/anaconda3/bin/conda&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_PYTHON_EXE</td>
          <td class="code"><pre>&#x27;/home/nathalie/anaconda3/bin/python&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_SHLVL</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;text/plain&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#x27;unix:path=/run/user/1000/bus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISPLAY</td>
          <td class="code"><pre>&#x27;:0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;competence_project.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GDMSESSION</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_DESKTOP_SESSION_ID</td>
          <td class="code"><pre>&#x27;this-is-deprecated&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SETUP_DISPLAY</td>
          <td class="code"><pre>&#x27;:1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_SHELL_SESSION_MODE</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_TERMINAL_SCREEN</td>
          <td class="code"><pre>&#x27;/org/gnome/Terminal/screen/b72115d0_7266_4ef3_b067_1f837c441f7c&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_TERMINAL_SERVICE</td>
          <td class="code"><pre>&#x27;:1.111&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GTK_MODULES</td>
          <td class="code"><pre>&#x27;gail:atk-bridge&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/home/nathalie&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;curl/7.81.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IM_CONFIG_PHASE</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/usr/lib/jvm/java-19-openjdk-amd64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_ADDRESS</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_IDENTIFICATION</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MEASUREMENT</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_MONETARY</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NAME</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_NUMERIC</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_PAPER</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TELEPHONE</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_TIME</td>
          <td class="code"><pre>&#x27;de_DE.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#x27;/usr/bin/lesspipe %s %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESSOPEN</td>
          <td class="code"><pre>&#x27;| /usr/bin/lesspipe %s&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;nathalie&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OLDPWD</td>
          <td class="code"><pre>&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/competence&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/venv/bin:/home/nathalie/.config/composer/vendor/bin:/home/nathalie/apache-maven-3.9.5/bin:/home/nathalie/anaconda3/condabin:/home/nathalie/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/nathalie/.npm-global/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/swagger/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PS1</td>
          <td class="code"><pre>(&#x27;(venv) \\[\\e]0;\\u@\\h: &#x27;
 &#x27;\\w\\a\\]${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ &#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/home/nathalie/coding/nathabee-cloud/competence_project&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_ACCESSIBILITY</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QT_IM_MODULE</td>
          <td class="code"><pre>&#x27;ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;format=openapi&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;GET&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_MANAGER</td>
          <td class="code"><pre>&#x27;local/nathalie-UPC:@/tmp/.ICE-unix/2011,unix/nathalie-UPC:/tmp/.ICE-unix/2011&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/bash&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AGENT_LAUNCHER</td>
          <td class="code"><pre>&#x27;gnome-keyring&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/run/user/1000/keyring/ssh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMD_EXEC_PID</td>
          <td class="code"><pre>&#x27;6843&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;nathalie&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;nathalie&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV</td>
          <td class="code"><pre>&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/venv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV_PROMPT</td>
          <td class="code"><pre>&#x27;(venv) &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VTE_VERSION</td>
          <td class="code"><pre>&#x27;6800&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WAYLAND_DISPLAY</td>
          <td class="code"><pre>&#x27;wayland-0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XAUTHORITY</td>
          <td class="code"><pre>&#x27;/run/user/1000/.mutter-Xwaylandauth.97MZT2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CONFIG_DIRS</td>
          <td class="code"><pre>&#x27;/etc/xdg/xdg-ubuntu:/etc/xdg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu:GNOME&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#x27;/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#x27;gnome-&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#x27;/run/user/1000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_CLASS</td>
          <td class="code"><pre>&#x27;user&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_DESKTOP</td>
          <td class="code"><pre>&#x27;ubuntu&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_TYPE</td>
          <td class="code"><pre>&#x27;wayland&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#x27;@im=ibus&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_</td>
          <td class="code"><pre>&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/venv/bin/python&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_CE_CONDA</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_CE_M</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x7ac28e2bffd0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>competence_project.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/nathalie/coding/nathabee-cloud/competence_project&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOWED_ORIGINS</td>
          <td class="code"><pre>[&#x27;http://localhost:3000&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,
             &#x27;HOST&#x27;: &#x27;localhost&#x27;,
             &#x27;NAME&#x27;: &#x27;competencedb&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;3306&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;compet&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;drf_yasg&#x27;,
 &#x27;competence&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>JWT_SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: (&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;,)}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;competence_project.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;competence_project.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;BLACKLIST_AFTER_ROTATION&#x27;: True,
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ROTATE_REFRESH_TOKENS&#x27;: &#x27;********************&#x27;,
 &#x27;SIGNING_KEY&#x27;: &#x27;********************&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[PosixPath(&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/static&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>PosixPath(&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/staticfiles&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [PosixPath(&#x27;/home/nathalie/coding/nathabee-cloud/competence_project/templates&#x27;)],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;competence_project.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
